{"version":3,"sources":["components/Accueil.js","components/Menu.js","components/Consolelog.js","components/Fonctions.js","components/Ifelse.js","components/Ternaire.js","components/Switch.js","components/For.js","components/DoWhile.js","components/While.js","components/Pop.js","components/Shift.js","components/Push.js","components/IndexArray.js","components/Filter.js","components/Reduce.js","components/Map.js","components/Includes.js","components/Sort.js","components/SetTimeout.js","App.js","reportWebVitals.js","index.js"],"names":["Accueil","Menu","to","Consolelog","Fonctions","IfElse","Ternaire","SwitchStatement","ForLoop","DoWhile","WhileLoop","Pop","Shift","Push","IndexArray","Filter","Reduce","MapArray","Includes","Sort","SetTimeout","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fce3644.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Accueil = () => {\n  return (\n    <div>\n      <p>Bienvenue sur ma cheat sheet Javascript</p>\n      <p>Veuillez utiliser le menu de gauche pour un rappel d'utilisation</p>\n    </div>\n  );\n};\n\nexport default Accueil;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = () => {\n  return (\n    <div>\n      <h2>Bases</h2>\n      <p>\n        <Link to={\"/consolelog\"}>Console.log</Link>\n      </p>\n      <p>\n        <Link to={\"/fonctions\"}>Fonctions</Link>\n      </p>\n      <p>\n        <Link to={\"/ifelse\"}>If / Else</Link>\n      </p>\n      <p>\n        <Link to={\"/ternaire\"}>Ternaire</Link>\n      </p>\n      <p>\n        <Link to={\"/switch\"}>Switch</Link>\n      </p>\n      <h2>Boucles</h2>\n      <p>\n        <Link to={\"/forloop\"}>For</Link>\n      </p>\n      <p>\n        <Link to={\"/do-while\"}>Do-While</Link>\n      </p>\n      <p>\n        <Link to={\"/while\"}>While</Link>\n      </p>\n      <h2>Arrays</h2>\n      <p>\n        <Link to={\"/pop\"}>Pop</Link>\n      </p>\n      <p>\n        <Link to={\"/shift\"}>Shift</Link>\n      </p>\n      <p>\n        <Link to={\"/push\"}>Push</Link>\n      </p>\n      <p>\n        <Link to={\"/index-array\"}>Index</Link>\n      </p>\n      <p>\n        <Link to={\"/filter\"}>Filter</Link>\n      </p>\n      <p>\n        <Link to={\"/map\"}>Reduce</Link>\n      </p>\n      <p>\n        <Link to={\"/map\"}>Map / ForEach</Link>\n      </p>\n      <p>\n        <Link to={\"/includes\"}>Includes</Link>\n      </p>\n      <p>\n        <Link to={\"/sort\"}>Sort</Link>\n      </p>\n      <h2>Asynchrone</h2>\n      <p>\n        <Link to={\"/set-timeout\"}>Set Timeout</Link>\n      </p>\n      <p>\n        <Link to={\"/sort\"}>Sort</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\n\nconst Consolelog = () => {\n  return (\n    <div>\n      <h3>Permet d'afficher un élément dans la console</h3>\n      <pre>\n        <code>{`\nconsole.log(\"Hello World\")\n`}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Consolelog;\n","import React from \"react\";\n\nconst Fonctions = () => {\n  return (\n    <div>\n      <h3>\n        Une fonction est un ensemble d'instructions menant à la réalisation\n        d'une tâche.\n      </h3>\n      <pre>\n        <code>\n          {`\nfunction calculate(a,b){\n   return a * b;\n}\n\nconst calculate = (a,b) => {\n    return a * b;\n}\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Fonctions;\n","import React from \"react\";\n\nconst IfElse = () => {\n  return (\n    <div>\n      <h3>\n        L'instruction if exécute une instruction si une condition donnée est\n        vraie ou équivalente à vrai. Si la condition n'est pas vérifiée, il est\n        possible d'utiliser une autre instruction.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet number = true;\n\nif(number) {\n    console.log(\"Vrai\");\n} else {\n    console.log(\"Faux\");\n}\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default IfElse;\n","import React from \"react\";\n\nconst Ternaire = () => {\n  return (\n    <div>\n      <h3>\n        L'opérateur (ternaire) conditionnel est le seul opérateur JavaScript qui\n        comporte trois opérandes. Cet opérateur est fréquemment utilisé comme\n        raccourci pour la déclaration if/else.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet IsNumber = true;\n\nIsNumber ? console.log(\"vrai\"):console.log(\"faux\");\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Ternaire;\n","import React from \"react\";\n\nconst SwitchStatement = () => {\n  return (\n    <div>\n      <h3>\n        L'instruction switch évalue une expression et, selon le résultat obtenu\n        et le cas associé, exécute les instructions correspondantes.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet SiriusTeam = [\"Jeremy\",\"Christophe\",\"Julie\",\"Thomas\",\"Laetitia\",\"Laura\"];\n\nswitch(SiriusTeam) {\n    case \"Jeremy\":\n        console.log(\"Jeremy\");\n        break;\n    case \"Christophe\":\n        console.log(\"Christophe\");\n        break;\n    case \"Julie\":\n        console.log(\"Julie\");\n        break;\n    case \"Thomas\":\n        console.log(\"Thomas\");\n        break;\n    case \"Laetitia\":\n        console.log(\"Laetitia\");\n        break;\n    case \"Laura\":\n        console.log(\"Laura\");\n        break;\n    default:\n        console.log(\"Error\");\n        break;\n}\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default SwitchStatement;\n","import React from \"react\";\n\nconst ForLoop = () => {\n  return (\n    <div>\n      <h3>\n        L'instruction for crée une boucle composée de trois expressions\n        optionnelles séparées par des points-virgules et encadrées entre des\n        parenthèses qui sont suivies par une instruction à exécuter dans la\n        boucle.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet SiriusTeam = [\"Jeremy\",\"Christophe\",\"Julie\",\"Thomas\",\"Laetitia\",\"Laura\"];\n\nfor(let i = 0; i < SiriusTeam.length; i++) {\n    console.log(SiriusTeam[i]);\n}\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default ForLoop;\n","import React from \"react\";\n\nconst DoWhile = () => {\n  return (\n    <div>\n      <h3>\n        L'instruction do...while crée une boucle qui exécute une instruction\n        jusqu'à ce qu'une condition de test ne soit plus vérifiée. La condition\n        est testée après que l'instruction soit exécutée, le bloc d'instructions\n        défini dans la boucle est donc exécuté au moins une fois.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet SiriusTeam = [\"Jeremy\",\"Christophe\",\"Julie\",\"Thomas\",\"Laetitia\",\"Laura\"];\nlet i = 0\n\ndo {\nconsole.log(SiriusTeam[1]);\ni++;\n} while(i < SiriusTeam.length)\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default DoWhile;\n","import React from \"react\";\n\nconst WhileLoop = () => {\n  return (\n    <div>\n      <h3>\n        L'instruction while permet de créer une boucle qui s'exécute tant qu'une\n        condition de test est vérifiée. La condition est évaluée avant\n        d'exécuter l'instruction contenue dans la boucle.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet SiriusTeam = [\"Jeremy\",\"Christophe\",\"Julie\",\"Thomas\",\"Laetitia\",\"Laura\"];\nlet i = 0\n\nwhile (i < SiriusTeam.length)\nconsole.log(SiriusTeam[1]);\ni++;\n}\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default WhileLoop;\n","import React from \"react\";\n\nconst Pop = () => {\n  return (\n    <div>\n      <h3>\n        La méthode pop() permet de supprimer et retourner le dernier élément\n        d'un tableau. Elle modifie donc la valeur de la propriété length\n        (longueur) du tableau.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet siriusTeamArray = [\"Jeremy\", \"Christophe\", \"Julie\", \"Thomas\", \"Laetitia\", \"Laura\"];\n\nconsole.log(siriusTeamArray.pop());\n\n//output: \"Laura\"\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Pop;\n","import React from \"react\";\n\nconst Shift = () => {\n  return (\n    <div>\n      <h3>\n        La méthode shift permet de retirer le premier élément du tableau et de\n        le renvoyer, de la même manière que se comporte la méthode pop.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet siriusTeamArray = [\"Jeremy\", \"Christophe\", \"Julie\", \"Thomas\", \"Laetitia\", \"Laura\"];\n\nconsole.log(siriusTeamArray.shift());\n\n//Output: \"Jeremy\"\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Shift;\n","import React from \"react\";\n\nconst Push = () => {\n  return (\n    <div>\n      <h3>\n        La méthode push() ajoute un ou plusieurs éléments à la fin d'un tableau\n        et retourne la nouvelle taille du tableau.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet siriusTeamArray = [\"Jeremy\", \"Christophe\", \"Julie\", \"Thomas\", \"Laetitia\", \"Laura\"];\n\nconsole.log(siriusTeamArray.length);\n\n// Output: 5\n\nconsole.log(siriusTeamArray.push(\"Jeremy\", \"Thomas\"));\n\n//Output: 7\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Push;\n","import React from \"react\";\n\nconst IndexArray = () => {\n  return (\n    <div>\n      <h3>\n        La méthode findIndex() renvoie l'indice du premier élément du tableau\n        qui satisfait une condition donnée par une fonction. Si la fonction\n        renvoie faux pour tous les éléments du tableau, le résultat vaut -1.\n      </h3>\n      <pre>\n        <code>\n          {`\nconst array1 = [5, 12, 8, 130, 44];\n\nconst isLargeNumber = (element) => element > 13;\n\nconsole.log(array1.findIndex(isLargeNumber));\n// expected output: 3\n`}\n        </code>\n      </pre>\n      <h3>\n        La méthode indexOf() renvoie le premier indice pour lequel on trouve un\n        élément donné dans un tableau. Si l'élément cherché n'est pas présent\n        dans le tableau, la méthode renverra -1.\n      </h3>\n      <pre>\n        <code>\n          {`\nconst beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];\n\nconsole.log(beasts.indexOf('bison'));\n// expected output: 1\n\n// start from index 2\nconsole.log(beasts.indexOf('bison', 2));\n// expected output: 4\n\nconsole.log(beasts.indexOf('giraffe'));\n// expected output: -1\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default IndexArray;\n","import React from \"react\";\n\nconst Filter = () => {\n  return (\n    <div>\n      <h3>\n        La méthode filter() crée et retourne un nouveau tableau contenant tous\n        les éléments du tableau d'origine qui remplissent une condition\n        déterminée par la fonction callback.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet siriusTeamArray = [\"jeremy\", \"christophe\", \"thomas\", \"laetitia\", \"julie\", \"laura\"];\nlet newarray = siriusTeamArray.filter(el => el === \"laetitia\");\nconsole.log(newarray);\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Reduce = () => {\n  return (\n    <div>\n      <h3>\n        La méthode reduce() applique une fonction qui est un « accumulateur » et\n        qui traite chaque valeur d'une liste (de la gauche vers la droite) afin\n        de la réduire à une seule valeur.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet array = [1, 2, 3, 4 ,5];\n\nconst reducer = (accumulateur, valActuelle) => accumulateur+valActuelle; \n\nconsole.log(array.reduce(reducer));\n\n// output : 15\n\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Reduce;\n","import React from \"react\";\n\nconst MapArray = () => {\n  return (\n    <div>\n      <h3>\n        La méthode forEach() permet d'exécuter une fonction donnée sur chaque\n        élément du tableau.\n      </h3>\n      <pre>\n        <code>\n          {`\nconst array1 = ['a', 'b', 'c'];\n\narray1.forEach(element => console.log(element));\n\n`}\n        </code>\n      </pre>\n      <h3>\n        La méthode map() crée un nouveau tableau avec les résultats de l'appel\n        d'une fonction fournie sur chaque élément du tableau.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet numberArray = [1, 2, 3, 4];\n\nlet byTwoArray = numberArray.map(el => el * 2);\n\nconsole.log(byTwoArray);\n\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default MapArray;\n","import React from \"react\";\n\nconst Includes = () => {\n  return (\n    <div>\n      <h3>\n        La méthode includes() permet de déterminer si un tableau contient une\n        valeur et renvoie true si c'est le cas, false sinon.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet siriusTeamArray = [\"jeremy\", \"thomas\", \"christophe\", \"laetitia\", \"julie\", \"laura\"];\n\nconsole.log(siriusTeamArray.includes('laetitia'));\n\n//output: true\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Includes;\n","import React from \"react\";\n\nconst Sort = () => {\n  return (\n    <div>\n      <h3>\n        La méthode sort() trie les éléments d'un tableau, dans ce même tableau,\n        et renvoie le tableau. Par défaut, le tri s'effectue sur les éléments du\n        tableau convertis en chaînes de caractères et triées selon les valeurs\n        des unités de code UTF-16 des caractères.\n      </h3>\n      <pre>\n        <code>\n          {`\nlet sortArray = [1, 10, 3];\n\nconsole.log(sortArray.sort());\n\n//output : [1,10,3]\n`}\n        </code>\n      </pre>\n      <h3>\n        Si on veut trier un tableau de nombre, il convient d’utiliser la méthode\n        suivante\n      </h3>\n      <pre>\n        <code>\n          {`\nlet sortArray = [1, 10, 3];\n\nconsole.log(sortArray.sort((a, b) => a - b));\n\n//output : [1,3,10]\n\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default Sort;\n","import React from \"react\";\n\nconst SetTimeout = () => {\n  return (\n    <div>\n      <h3>Permet d'exécuter une fonction callback après un temps donné.</h3>\n      <pre>\n        <code>\n          {`\nwindow.setTimeOut(() => {\n    console.log(\"Hello World\");\n}, 2000)\n`}\n        </code>\n      </pre>\n    </div>\n  );\n};\n\nexport default SetTimeout;\n","import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Accueil from \"./components/Accueil\";\nimport Menu from \"./components/Menu\";\nimport Consolelog from \"./components/Consolelog\";\nimport Fonctions from \"./components/Fonctions\";\nimport IfElse from \"./components/Ifelse\";\nimport Ternaire from \"./components/Ternaire\";\nimport SwitchStatement from \"./components/Switch\";\nimport ForLoop from \"./components/For\";\nimport DoWhile from \"./components/DoWhile\";\nimport WhileLoop from \"./components/While\";\nimport Pop from \"./components/Pop\";\nimport Shift from \"./components/Shift\";\nimport Push from \"./components/Push\";\nimport IndexArray from \"./components/IndexArray\";\nimport Filter from \"./components/Filter\";\nimport Reduce from \"./components/Reduce\";\nimport MapArray from \"./components/Map\";\nimport Includes from \"./components/Includes\";\nimport Sort from \"./components/Sort\";\nimport SetTimeout from \"./components/SetTimeout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cheat Sheet JS</h1>\n      </header>\n      <div className=\"App-page\">\n        <nav className=\"App-menu\">\n          <Menu />\n        </nav>\n        <section className=\"App-content\">\n          <Switch>\n            <Route exact path=\"/\" component={Accueil} />\n            <Route path=\"/consolelog\" component={Consolelog} />\n            <Route path=\"/fonctions\" component={Fonctions} />\n            <Route path=\"/ifelse\" component={IfElse} />\n            <Route path=\"/ternaire\" component={Ternaire} />\n            <Route path=\"/switch\" component={SwitchStatement} />\n            <Route path=\"/forloop\" component={ForLoop} />\n            <Route path=\"/do-while\" component={DoWhile} />\n            <Route path=\"/while\" component={WhileLoop} />\n            <Route path=\"/pop\" component={Pop} />\n            <Route path=\"/shift\" component={Shift} />\n            <Route path=\"/push\" component={Push} />\n            <Route path=\"/index-array\" component={IndexArray} />\n            <Route path=\"/filter\" component={Filter} />\n            <Route path=\"/reduce\" component={Reduce} />\n            <Route path=\"/map\" component={MapArray} />\n            <Route path=\"/includes\" component={Includes} />\n            <Route path=\"/sort\" component={Sort} />\n            <Route path=\"/set-timeout\" component={SetTimeout} />\n          </Switch>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}